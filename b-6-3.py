# pyxel.run (外部サイトにリンクしています。)を呼び出すと、イベントループの実行が始まります。引数として2つの関数を渡しますが、この2つの関数がイベントループからほぼ一定時間ごとに（標準では毎秒30回）呼び出されます。

# updateは、主に変数の値の更新などプログラム内部の処理を行うための関数です。
# drawは、主に図形の描画を行うための関数です。

# updateとdrawは必ず交互に呼び出されるとは限らず、処理のタイミングによってupdateが複数回呼び出されてからdrawが1回呼び出されることもあります。

# global aは、グローバル変数（関数の外で定義された変数）のaを関数の中でも使うための宣言です。

# while文は、繰り返しを行う条件を指定し、その条件が成り立っている間、同じ処理を繰り返し実行します。
# （ヒント：どちら方向に動いているかを覚えておく変数が必要になります。）
# ---------------------------------------------------------

# 今回も a %= 200 を応用した処理を施すものと考えていたが、違った。a %= 200 を活かすには、二つの方向に進むそれぞれの処理を、条件分岐によって選択させなければならないが、右下への処理も左上へ向かう処理も同様に0−200の領域を用いているので分岐させることができなかった。そこで新たな変数directionを導入し、if文と掛け合わせ、正数と負数をつくり、これをaに掛けることで200から１ずつ０へ向かう処理を実現した。

import pyxel
pyxel.init(200,200)
a = 0
direction = 1

def update():
    global a
    global direction
    a += 1 * direction
    if a >= 200:
        direction = -1
    elif a <= 0:
        direction = 1

def draw():
    global a
    pyxel.cls(7)
    pyxel.circ(a, a, 10, 0)

pyxel.run(update, draw)
